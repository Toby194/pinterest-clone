[{"/Users/ShiYash/Desktop/my-project/pinterest-clone/src/index.js":"1","/Users/ShiYash/Desktop/my-project/pinterest-clone/src/App.js":"2","/Users/ShiYash/Desktop/my-project/pinterest-clone/src/reportWebVitals.js":"3","/Users/ShiYash/Desktop/my-project/pinterest-clone/src/Header.js":"4","/Users/ShiYash/Desktop/my-project/pinterest-clone/src/Mainboard.js":"5","/Users/ShiYash/Desktop/my-project/pinterest-clone/src/Pin.js":"6","/Users/ShiYash/Desktop/my-project/pinterest-clone/src/firebase.js":"7","/Users/ShiYash/Desktop/my-project/pinterest-clone/src/api/unsplash.js":"8"},{"size":500,"mtime":1611476723539,"results":"9","hashOfConfig":"10"},{"size":2251,"mtime":1611724322453,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1611476723542,"results":"12","hashOfConfig":"10"},{"size":2152,"mtime":1613800675027,"results":"13","hashOfConfig":"10"},{"size":469,"mtime":1611720038545,"results":"14","hashOfConfig":"10"},{"size":466,"mtime":1611720329750,"results":"15","hashOfConfig":"10"},{"size":582,"mtime":1611704181960,"results":"16","hashOfConfig":"10"},{"size":315,"mtime":1611707883937,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"y8n6w7",{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/Users/ShiYash/Desktop/my-project/pinterest-clone/src/index.js",[],["37","38"],"/Users/ShiYash/Desktop/my-project/pinterest-clone/src/App.js",["39","40","41","42"],"import { useState, useEffect } from 'react';\nimport './App.css';\nimport Header from './Header';\nimport Mainboard from './Mainboard';\nimport unsplash from './api/unsplash';\nimport db from './firebase';\n\nfunction App() {\n  const [pins, setNewPins] = useState([]);\n  // let pins = [];\n\n  const makeAPICall = (term) => {\n    // Make an API call\n    return unsplash.get(\"https://api.unsplash.com/search/photos\", {\n      params: {query: term}\n    });\n\n  };\n\n  const onSearchSubmit = (term) => {\n    // console.log(term, 'term at the App.js');\n    let promises = [];\n    let searchedPins = [];\n    // promises.push(makeAPICall(term).then((res) => console.log(res, 'what is in res?')));\n    promises.push(makeAPICall(term).then((res) => {\n      let results = res.data.results;\n      results.map((pin) => {\n        // console.log(pin, 'what is in pin')\n        searchedPins.push(pin);\n      });\n    }));\n\n    Promise.all(promises).then(() => {\n      // console.log(searchedPins, 'what is in searchedPins');\n      setNewPins(searchedPins);\n    });\n  };\n  // console.log(pins, 'what is in pins?');\n\n  const getNewPins = () => {\n      let promises = [];\n      let pinData = [];\n\n      db.collection('terms').onSnapshot((snapshot) => {\n        let snapshotData = snapshot.docs;\n\n        if(snapshotData.length >= 10) {\n            \n          snapshotData = snapshotData.slice(snapshotData.length - 5, snapshotData.length);\n        };\n\n        snapshotData.map((doc) => {\n\n          promises.push(makeAPICall(doc.data().term)\n          .then((res) => {\n            // console.log(res, 'what is res here?');\n            let results = res.data.results;\n            results.map((object) => {\n              pinData.push(object)\n            });\n\n            pinData.sort(function(a, b) {\n              return 0.5 - Math.random();\n            });\n          })\n        )\n      });\n    });\n    Promise.all(promises).then(() => {\n        setNewPins(pinData);\n      });\n  };\n\n  useEffect(() => {\n    getNewPins();\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__header\">\n        <Header onSubmit={onSearchSubmit}/>\n      </div>\n      <div className=\"app__body\">\n        <Mainboard pins={pins} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/ShiYash/Desktop/my-project/pinterest-clone/src/reportWebVitals.js",[],"/Users/ShiYash/Desktop/my-project/pinterest-clone/src/Header.js",[],"/Users/ShiYash/Desktop/my-project/pinterest-clone/src/Mainboard.js",[],"/Users/ShiYash/Desktop/my-project/pinterest-clone/src/Pin.js",[],["43","44"],"/Users/ShiYash/Desktop/my-project/pinterest-clone/src/firebase.js",[],"/Users/ShiYash/Desktop/my-project/pinterest-clone/src/api/unsplash.js",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":27,"column":25,"nodeType":"51","messageId":"52","endLine":27,"endColumn":27},{"ruleId":"49","severity":1,"message":"50","line":52,"column":32,"nodeType":"51","messageId":"52","endLine":52,"endColumn":34},{"ruleId":"49","severity":1,"message":"50","line":58,"column":34,"nodeType":"51","messageId":"52","endLine":58,"endColumn":36},{"ruleId":"53","severity":1,"message":"54","line":76,"column":6,"nodeType":"55","endLine":76,"endColumn":8,"suggestions":"56"},{"ruleId":"45","replacedBy":"57"},{"ruleId":"47","replacedBy":"58"},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getNewPins'. Either include it or remove the dependency array.","ArrayExpression",["61"],["59"],["60"],"no-global-assign","no-unsafe-negation",{"desc":"62","fix":"63"},"Update the dependencies array to be: [getNewPins]",{"range":"64","text":"65"},[1995,1997],"[getNewPins]"]